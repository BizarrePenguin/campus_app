// Mocks generated by Mockito 5.3.1 from annotations
// in campus_app/test/pages/calendar/calendar_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:campus_app/pages/calendar/calendar_datasource.dart' as _i4;
import 'package:campus_app/pages/calendar/entities/event_entity.dart' as _i6;
import 'package:dio/dio.dart' as _i2;
import 'package:hive/hive.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBox_1<E> extends _i1.SmartFake implements _i3.Box<E> {
  _FakeBox_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CalendarDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCalendarDatasource extends _i1.Mock
    implements _i4.CalendarDatasource {
  MockCalendarDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Dio);
  @override
  _i3.Box<dynamic> get eventCach => (super.noSuchMethod(
        Invocation.getter(#eventCach),
        returnValue: _FakeBox_1<dynamic>(
          this,
          Invocation.getter(#eventCach),
        ),
      ) as _i3.Box<dynamic>);
  @override
  _i5.Future<List<dynamic>> getAStAEventsAsJsonArray() => (super.noSuchMethod(
        Invocation.method(
          #getAStAEventsAsJsonArray,
          [],
        ),
        returnValue: _i5.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i5.Future<List<dynamic>>);
  @override
  _i5.Future<void> writeEventsToCach(List<_i6.Event>? entities) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeEventsToCach,
          [entities],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  List<_i6.Event> readEventsFromCach() => (super.noSuchMethod(
        Invocation.method(
          #readEventsFromCach,
          [],
        ),
        returnValue: <_i6.Event>[],
      ) as List<_i6.Event>);
  @override
  _i5.Future<List<_i6.Event>> updateSavedEvents({_i6.Event? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSavedEvents,
          [],
          {#event: event},
        ),
        returnValue: _i5.Future<List<_i6.Event>>.value(<_i6.Event>[]),
      ) as _i5.Future<List<_i6.Event>>);
}
